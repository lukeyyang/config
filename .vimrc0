map <F9> : ! gcc-4.8 -Wall -Wextra -Wconversion -g -O3 % -o %< && size %< <CR>
map <F5> : ! gdb %< <CR>
map <F7> : ! g++-4.8 -Wall -Wextra -Wconversion -g -O3 % -o %< && size %< <CR>
"map <F9> : ! gcc -Wall -Wextra -Wconversion -g -O3 % -o %< && size %< <CR>
"map <F5> : ! gdb %< <CR>
"map <F7> : ! g++ -Wall -Wextra -Wconversion -g -O3 % -o %< && size %< <CR>


set nocompatible
set showcmd
set foldmethod=marker
set grepprg=grep\ -nH\ $*
set autoindent
if version >= 700
	set spl=en spell
	set nospell
endif
set wildmenu
set wildmode=list:longest,full
set number
set smartcase
set incsearch
set hlsearch
set nohidden
set tabstop=8
set softtabstop=8
set shiftwidth
set fileencodings=utf-8
set tabstop=8
set softtabstop=8
set textwidth=80
set shiftwidth=8
set cinoptions{0,1s,t0,n-2,p2s,(0.3s,=.5s,>1s,=1S,:1s)

highlight MarchParen ctermbg=4
let g:clipbrdDefaultReg = '+'
inoremap jj <Esc>
nnoremap JJJJ <Nop>
compiler gcc
filetype on
filetype plugin on
syntax on
colorscheme desert

"{{{ Paste Toggle
let paste_mode = 0 " 0 = normal, 1 = paste

func! Paste_on_off()
   if g:paste_mode == 0
      set paste
      let g:paste_mode = 1
   else
      set nopaste
      let g:paste_mode = 0
   endif
   return
endfunc
"}}}

"{{{ Todo List Mode

function! TodoListMode()
   e ~/.todo.otl
   Calendar
   wincmd l
   set foldlevel=1
   tabnew ~/.notes.txt
   tabfirst
   " or 'norm! zMzr'
endfunction



	set t_Co=8
	set t_Sb=^[[4%dm
	set t_Sf=^[[3%dm
endif

set foldmethod=indent

set iskeyword+=33-47,58-64,91-96,123-128

au BufReadPost * if line("'\"") > 0|if line("'\"") <= line("$")|exe("norm'\"")|else|exe "norm $"|endif|endif

		"Sets how many lines of history VIM har to remember
		set history=400
		
		set autoread


		"Turn on WiLd menu
		"z
 set wildmenu
		
		"Always show current position
 set ruler
		
		"The commandbar is 2 high
 set cmdheight=2
	
		"Set backspace
		 set backspace=eol,start,indent
	
		"Bbackspace and cursor keys wrap to
set whichwrap+=<,>,h,l
		
		"show matching bracets
set showmatch
		
		"How many tenths of a second to blink
		 set mat=2
		
		 filetype plugin on
		
		 au BufRead,BufNewFile *.js set syntax=jquery
		
		"map  :NERDTreeToggle
		
		"nmap   :TlistToggle
		 let Tlist_Use_Right_Window=1
		 set tags=tags;/
	
		 let NERDShutUp=1
		 "map  ,c
		" phpDocumentor for VIM
		 inoremap  :call PhpDocSingle()
		 nnoremap  :call PhpDocSingle()
		 vnoremap  :call PhpDocRange()
	autocmd! bufwritepost _vimrc source %f &term=="xterm"
	set t_Co=8
	set t_Sb=^[[4%dm
	set t_Sf=^[[3%dm
endif

set foldmethod=indent

set iskeyword+=33-47,58-64,91-96,123-128

au BufReadPost * if line("'\"") > 0|if line("'\"") <= line("$")|exe("norm'\"")|else|exe "norm $"|endif|endif

		"Sets how many lines of history VIM har to remember
		set history=400
		
		set autoread


		"Turn on WiLd menu
		"z
 set wildmenu
		
		"Always show current position
 set ruler
		
		"The commandbar is 2 high
 set cmdheight=2
	
		"Set backspace
		 set backspace=eol,start,indent
	
		"Bbackspace and cursor keys wrap to
set whichwrap+=<,>,h,l
		
		"show matching bracets
set showmatch
		
		"How many tenths of a second to blink
		 set mat=2
		
		 filetype plugin on
		
		 au BufRead,BufNewFile *.js set syntax=jquery
		
		"map  :NERDTreeToggle
		
		"nmap   :TlistToggle
		 let Tlist_Use_Right_Window=1
		 set tags=tags;/
	
		 let NERDShutUp=1
		 "map  ,c
		" phpDocumentor for VIM
		 inoremap  :call PhpDocSingle()
		 nnoremap  :call PhpDocSingle()
		 vnoremap  :call PhpDocRange()
	autocmd! bufwritepost _vimrc source %f &term=="xterm"
	set t_Co=8
	set t_Sb=^[[4%dm
	set t_Sf=^[[3%dm
endif

set foldmethod=indent

set iskeyword+=33-47,58-64,91-96,123-128

au BufReadPost * if line("'\"") > 0|if line("'\"") <= line("$")|exe("norm'\"")|else|exe "norm $"|endif|endif

		"Sets how many lines of history VIM har to remember
		set history=400
		
		set autoread


		"Turn on WiLd menu
		"z
 set wildmenu
		
		"Always show current position
 set ruler
		
		"The commandbar is 2 high
 set cmdheight=2
	
		"Set backspace
		 set backspace=eol,start,indent
	
		"Bbackspace and cursor keys wrap to
set whichwrap+=<,>,h,l
		
		"show matching bracets
set showmatch
		
		"How many tenths of a second to blink
		 set mat=2
		
		 filetype plugin on
		
		 au BufRead,BufNewFile *.js set syntax=jquery
		
		"map  :NERDTreeToggle
		
		"nmap   :TlistToggle
		 let Tlist_Use_Right_Window=1
		 set tags=tags;/
	
		 let NERDShutUp=1
		 "map  ,c
		" phpDocumentor for VIM
		 inoremap  :call PhpDocSingle()
		 nnoremap  :call PhpDocSingle()
		 vnoremap  :call PhpDocRange()
	autocmd! bufwritepost _vimrc source %f &term=="xterm"
	set t_Co=8
	set t_Sb=^[[4%dm
	set t_Sf=^[[3%dm
endif

set foldmethod=indent

set iskeyword+=33-47,58-64,91-96,123-128

au BufReadPost * if line("'\"") > 0|if line("'\"") <= line("$")|exe("norm'\"")|else|exe "norm $"|endif|endif

		"Sets how many lines of history VIM har to remember
		set history=400
		
		set autoread


		"Turn on WiLd menu
		"z
 set wildmenu
		
		"Always show current position
 set ruler
		
		"The commandbar is 2 high
 set cmdheight=2
	
		"Set backspace
		 set backspace=eol,start,indent
	
		"Bbackspace and cursor keys wrap to
set whichwrap+=<,>,h,l
		
		"show matching bracets
set showmatch
		
		"How many tenths of a second to blink
		 set mat=2
		
		 filetype plugin on
		
		 au BufRead,BufNewFile *.js set syntax=jquery
		
		"map  :NERDTreeToggle
		
		"nmap   :TlistToggle
		 let Tlist_Use_Right_Window=1
		 set tags=tags;/
	
		 let NERDShutUp=1
		 "map  ,c
		" phpDocumentor for VIM
		 inoremap  :call PhpDocSingle()
		 nnoremap  :call PhpDocSingle()
		 vnoremap  :call PhpDocRange()
	autocmd! bufwritepost _vimrc source %
